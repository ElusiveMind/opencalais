<?php
/**
 * @file opencalais.install
 */
 
/**
 * Implements hook_install().
 */
function opencalais_install() {
  db_query("UPDATE {system} SET weight = 10 WHERE name = 'opencalais'");
  drupal_set_message('<pre>'.print_r(opencalais_get_all_entities(), true).'</pre>');
  foreach (opencalais_get_all_entities() as $entity) {
    opencalais_create_vocabulary($entity);
  }
}

/**
 * Implements hook_uninstall().
 */
function opencalais_uninstall() {
}

/**
 * Implements hook_schema().
 */
function opencalais_schema() {
  $schema['opencalais_preset'] = array(
    'description' => 'OpenCalais presets',
    'export' => array(
      'key' => 'name',
      'identifier' => 'preset',                // Exports will be as $preset
      'default hook' => 'opencalais_default_preset',  // Function hook name.
      'api' => array(
        'owner' => 'opencalais',
        'api' => 'opencalais_default_presets',  // Base name for api include files.
        'minimum_version' => 1,
        'current_version' => 1,
      ),
    ),
    'fields' => array(
      'pid' => array(
        'type' => 'serial', 
        'unsigned' => TRUE, 
        'not null' => TRUE,
        'description' => 'Primary ID field for the table. Not used for anything except internal lookups.',
        'no export' => TRUE, // Do not export database-only keys.
      ),
      'name' => array(
        'type' => 'varchar', 
        'length' => 255, 
        'not null' => TRUE,
        'description' => 'Unique ID for presets. Used to identify them programmatically.'
      ),
      'title' => array(
        'type' => 'varchar', 
        'length' => 255, 
        'not null' => TRUE,
        'description' => 'Unique ID for presets. Used to identify them programmatically.'
      ),
      'description' => array(
        'type' => 'varchar',
        'length' => '255',
        'description' => 'A human readable name of a preset.',
      ),
      'entity' => array(
        'type' => 'varchar',
        'length' => '255',
        'description' => 'Entity type',
      ),
      'bundle' => array(
        'type' => 'varchar',
        'length' => '255',
        'description' => 'Bundle',
      ),
      'process' => array(
        'type' => 'int',
        'description' => 'How to process the tags for the entity',
      ),
      'config' => array(
        'type' => 'text',
        'serialize' => TRUE,      
      ),
    ),    
    'primary key' => array('pid'),
    'unique keys' => array(
      'name' => array('name'),
    ),
  );
  $schema['opencalais_term'] = array(
    'description' => 'Holds retrieved OpenCalais terms and the Vocabulary to which they are associated',
    'fields' => array(
      'tid' => array(
        'type' => 'serial', 
        'unsigned' => TRUE, 
        'not null' => TRUE,
        'description' => 'Identifier for an OpenCalais term'
      ),
      'name' => array(
        'type' => 'varchar', 
        'length' => 255, 
        'not null' => TRUE,
        'description' => 'The name of the term'
      ),
      'type' => array(
        'type' => 'varchar', 
        'length' => 255, 
        'not null' => TRUE,
        'description' => 'The type of the term'
      ),
      'vocabulary' => array(
        'type' => 'varchar', 
        'length' => 255, 
        'not null' => TRUE, 
        'description' => 'The Vocabulary machine name this term is in'
      ),
      'tdid' => array(
        'type' => 'int', 
        'unsigned' => TRUE, 
        'description' => 'The Taxonomy Term ID for this OpenCalais Term'
      ),
      'guid' => array(
        'type' => 'varchar', 
        'length' => 255, 
        'not null' => TRUE,
        'description' => 'The OpenCalais GUID of this term'
      ),
      'resolved_guid' => array(
        'type' => 'varchar', 
        'length' => 255, 
        'description' => 'The Disambiguated OpenCalais GUID of this term (if it exists)'
      ),
      'resolved_name' => array(
        'type' => 'varchar', 
        'length' => 255, 
        'description' => 'The normalized/resolved name of the term'
      ),
      'resolved_type' => array(
        'type' => 'varchar', 
        'length' => 255, 
        'description' => 'The disambiguated type of this Entity'
      ),
    ),
    'indexes' => array(
      'vocabulary' => array('vocabulary'),
      'tdid' => array('tdid'),
      'guid' => array('guid'),
    ),
    'foreign keys' => array(
      'opencalais_term_taxonomy_term_tid' => array(
        'table' => 'taxonomy_term_data',
        'columns' => array('tdid' => 'tid'),
       ),
      'opencalais_term_vocabulary_vid' => array(
        'table' => 'taxonomy_vocabulary',
        'columns' => array('vocabulary' => 'machine_name'),
       ),
    ),    
    'primary key' => array('tid'),
  );
  
  $schema['opencalais_term_node'] = array(
    'description' => 'Holds the association between a retrieved OpenCalais term and a Node',
    'fields' => array(
      'tid' => array(
        'type' => 'int', 
        'unsigned' => TRUE, 
        'not null' => TRUE, 
        'default' => 0,
        'description' => t('The term identifier')
      ),
      'nid' => array(
        'type' => 'int', 
        'unsigned' => TRUE, 
        'not null' => TRUE, 
        'default' => 0,
        'description' => t('The node for this term')
      ),
      'relevance' => array(
        'type' => 'numeric', 
        'size' => 'normal', 
        'not null' => TRUE, 
        'default' => 0.0, 
        'precision' => 5, 
        'scale' => 3,
        'description' => t('The relevence score from OpenCalais for this term/node combination')
        ),
    ),
    'indexes' => array(
      'tid'    => array('tid'),
      'nid'    => array('nid'),
    ),
    'primary key' => array('tid', 'nid'),
  );
  
  return $schema;
}
 
function _opencalais_update_7000() {
  // Migrate all data from old tables to new tables

  // Migrate configuration to presets
  
  // Migrate permissions
  
  
}

