<?php
// $Id$
/*
  Copyright (C) 2010 by Phase2 Technology.
  Author(s): Frank Febbraro, Irakli Nadareishvili

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License.
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY. See the LICENSE.txt file for more details.
*/
/**
 * @file
 */


/**
 * Implements hook_init().
 */
function opencalais_api_init() {
  if (!class_exists('ARC2')) {
	  @include_once libraries_get_path('arc') . '/ARC2.php';
	}
}

/**
 * Implements hook_menu().
 */
function opencalais_api_menu() {
  $items = array();
  
  $items['admin/config/content/opencalais'] = array(
    'title' => 'OpenCalais settings',
    'description' => 'Configure Settings for OpenCalais integration',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('opencalais_api_admin_settings'),
    'access arguments' => array('administer opencalais'),
  );

  $items['admin/config/content/opencalais/api'] = array(
    'title' => 'API',
    'description' => 'Configure Settings for OpenCalais integration',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  return $items;
}

/**
 * Build the admin settings form.
 */
function opencalais_api_admin_settings() {
  $form = array();
  $opencalais_url = array(
    '!opencalaisurl' => l(t('Need One'), 'http://www.opencalais.com/user/register')
    );
  
  $form['opencalais_api_key'] = array(
    '#type' => 'textfield',
    '#title' => t('OpenCalais API Key'),
    '#default_value' => variable_get('opencalais_api_key', NULL),
    '#size' => 60,
    '#description' => t('Required to utilize the Calais service. !calaisurl?', $opencalais_url),
  );
  $form['opencalais_api_server'] = array(
    '#type' => 'textfield',
    '#title' => t('OpenCalais Server'),
    '#default_value' => variable_get('opencalais_api_server', 'api1.opencalais.com'),
    '#size' => 60,
    '#description' => t('The domain name for the server to use.  Typically you will not have to change this unless you want to test beta functionality.'),
  );
  
  $form['help_text'] = array(
    '#markup' => '<div class="messages status">' . t('To configure tagging visit an individual content type\'s edit area and click the OpenCalais Fields tab.') . 
      '<br/><br/>' . l('Content Types Edit Screen', 'admin/structure/types') .
      '</div>'
  );
  
  $form = system_settings_form($form);
  return $form;
}

/**
 * Get the service implementing the Calais interface.
 */
function opencalais_api_get_service($options = array(), $type = NULL) {
  switch ($type) {
    case 'semanticproxy':
      $class = variable_get('calais_semanticproxy_impl', 'SemanticProxyService');
      break;
    case 'opencalais':
    default:
      $class = variable_get('opencalais_default_impl', 'CalaisService');
  }
  
  return new $class($options);
}


/**
* 
* Checks if Calais API Key is set
*
* @param $show_warning
*   Whether to display a warning
*/
function is_opencalais_api_key_set($show_warning = TRUE) {

  $apikey = variable_get('calais_api_key', FALSE);

  if (empty($apikey)) {
    if ($show_warning) {
      drupal_set_message(t('OpenCalais semantic analysis skipped because OpenCalais API Key is not set. Please configure it at: !link', 
                              array('!link' => l('admin/config/opencalais/api', 'admin/config/opencalais/api', 
                                                array('attributes' => array('target' => '_blank'))
                                                )
                              )
                          ),
                          $type = 'warning', $repeat = FALSE);
    }
    return FALSE;
  }

  return TRUE;

}

/**
 * Analyze the content via Calais.
 *
 * @param $content The content to ship off to Calais for analysis
 * @param $parameters Array of Calais parameters for overriding defaults.
 * @see http://www.opencalais.com/APIcalls#inputparameters
 *
 * @return The analyzed content
 */
function opencalais_api_analyze($content, $parameters = array()) {

  if (!is_opencalais_api_key_set()) {
    return array();
  }

  $opencalais = opencalais_api_get_service($parameters);
  return $opencalais->analyze($content);
}

/**
 * Analyze the content via the Calais XML interface.
 *
 * @param $title The title of the content
 * @param $body The entire body of the content
 * @param $date The date of the content (can be created or updated date) 
 *    This date is used to base calculations of words like "tomorrow" or "yesterday"
 * @param $parameters Array of Calais parameters for overriding defaults.
 * @see http://www.opencalais.com/APIcalls#inputparameters
 *
 * @return The analyzed content
 */
function opencalais_api_analyze_xml($title, $body, $date, $parameters = array()) {

  if (!is_opencalais_api_key_set()) {
    return array();
  }

  $opencalais = opencalais_api_get_service($parameters);
  return $opencalais->analyzeXML($title, $body, $date);
}

/**
 * Takes a 'CamelCase'' word and adds spaces to make it 'Camel Case'
 *
 * @return an formated string
 */
function opencalais_api_make_readable($camel_case) {
  return preg_replace('/(.*?[a-z]{1})([A-Z]{1}.*?)/', '${1} ${2}', $camel_case);
}

/**
 * Takes a 'CamelCase' word and makes it 'camel_case'
 *
 * @return an formated string
 */
function opencalais_api_make_machine($camel_case) {
  $name = preg_replace('/(.*?[a-z]{1})([A-Z]{1}.*?)/', '${1}_${2}', $camel_case);
  return strtolower($name);
}

/**
 * Implements hook_namespaces().
 *
 * Declare the Calais namespaces for RDF/RDFa support.
 */
function opencalais_api_rdf_namespaces() {
  return array(
    'c'         => 'http://s.opencalais.com/1/pred/',
    'sys'       => 'http://s.opencalais.com/1/type/sys/',
    'lid'       => 'http://s.opencalais.com/1/type/lid/',
    'cat'       => 'http://s.opencalais.com/1/type/cat/',
    'resolved'  => 'http://s.opencalais.com/1/type/er/',
    'cgeo'      => 'http://s.opencalais.com/1/type/er/Geo/',
    'eventfact' => 'http://s.opencalais.com/1/type/em/r/',
    'entity'    => 'http://s.opencalais.com/1/type/em/e/',
    'cld'       => "http://s.opencalais.com/1/linkeddata/pred/",
  );
}
